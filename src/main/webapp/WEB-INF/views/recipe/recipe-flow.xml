<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
      	http://www.springframework.org/schema/webflow
      	http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd">
      	<!-- use this to examine the xsd: https://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd -->
	
	<!-- <secured attributes="GUEST" /> -->
	
	<var name="instructpages" class="java.util.String"/>
		
	<on-start>
    	<!-- <evaluate expression="recipeService.createRecipe(currentUser.name)" result="flowScope.recipe" /> -->
    	<evaluate expression="recipeService.createRecipe()" result="flowScope.recipe" />
	</on-start>

	<view-state id="basics" view="recipe/basics" model="recipe">
		<binder>
			<binding property="name"/>
			<binding property="description"/>
			<binding property="servings"/>
			<binding property="prepHours"/>
			<binding property="prepMinutes"/>
			<binding property="allowShare"/>
			<binding property="category.id"/>
			<binding property="category.name"/>
		</binder>
		<!-- <transition on="proceed" to="ingredients" validation-hints="'recipeBasicGroup'"></transition> -->
		<transition on="proceed" to="instructions" validation-hints="'recipeBasicGroup'"></transition>
		<transition on="cancel" to="cancel" bind="false" validate="false"></transition>
	</view-state>
	<view-state id="ingredients" view="recipe/ingredients" model="recipe">
		<on-render>
			<evaluate expression="recipeService.getIngredients(recipe)" result="viewScope.ingredientList"></evaluate>
		</on-render>
		<transition on="back" to="basics" validate="false">
			<evaluate expression="recipeService.adjustRecipeIngredientList(recipe, flowRequestContext)"></evaluate>
		</transition>
		<transition on="proceed" to="instructions" bind="true" validate="true" validation-hints="'recipeRecipeIngredientGroup'">
			<evaluate expression="recipeService.adjustRecipeIngredientList(recipe, flowRequestContext)"></evaluate>
		</transition>
		<transition on="cancel" to="cancel" bind="false" validate="false"></transition>
	</view-state>
	<view-state id="instructions" view="recipe/instructions" model="recipe">
		<transition on="back" to="ingredients" validate="false">
			<!-- <evaluate expression="recipeService.adjustInstructionList(recipe, flowRequestContext)"></evaluate> -->
		</transition>
		<!-- <transition on="proceed" to="optional" bind="true" validate="true" validation-hints="'recipeInstructGroup'"> -->
		<transition on="proceed" to="optional" bind="true">
			<evaluate expression="recipeService.adjustInstructionList(recipe, flowRequestContext)"></evaluate>
		</transition>
		<transition on="cancel" to="cancel" bind="false" validate="false"></transition>
	</view-state>
	<view-state id="optional" view="recipe/optional" model="recipe">
		<binder>
			<binding property="background"/>
			<binding property="notes"/>
			<binding property="tags"/>
			<binding property="source.type"/>
			<binding property="source.cookbook"/>
			<binding property="source.cookbookPage"/>
			<binding property="source.magazine"/>
			<binding property="source.magazinePubdate"/>
			<binding property="source.newspaper"/>
			<binding property="source.newspaperPubdate"/>
			<binding property="source.person"/>
			<binding property="source.websiteUrl"/>
			<binding property="source.recipeUrl"/>
			<binding property="source.other"/>
		</binder>
		<transition on="back" to="instructions" bind="true" validate="false"></transition>
		<transition on="proceed" to="review" bind="true" validate="true" validation-hints="'recipeOptionalGroup'"></transition>		
		<transition on="cancel" to="cancel" bind="false" validate="false"></transition>
	</view-state>
	<view-state id="review" view="recipe/review" model="recipe">
		<on-render>
			<evaluate expression="recipeService.getIngredients(recipe)" result="viewScope.ingredientList"></evaluate>
		</on-render>
		<transition on="back" to="optional" bind="true" validate="false"></transition>
		<transition on="save" to="end" bind="true">
			<evaluate expression="recipeService.saveRecipe(recipe)"></evaluate>
		</transition>
		<transition on="cancel" to="cancel" bind="false" validate="false"></transition>
	</view-state>

	<end-state id="end" view="recipe/endpage"></end-state>
	<end-state id="cancel" view="recipe/cancel"/>

</flow>