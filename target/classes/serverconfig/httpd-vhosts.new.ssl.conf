# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#

SSLProtocol TLSv1.2
SSLProxyProtocol TLSv1.2
#SSLProtocol all -SSLv3
#SSLProxyProtocol all -SSLv3
#SSLProtocol -all +TLSv1 +TLSv1.1 +TLSv1.2
#SSLProxyProtocol -all +TLSv1 +TLSv1.1 +TLSv1.2
#SSLProtocol -all +TLSv1.1 +TLSv1.2
#SSLProxyProtocol -all +TLSv1.1 +TLSv1.2
#SSLCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA
#SSLProxyCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA
SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
SSLProxyCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
#SSLCipherSuite ALL:!DH:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP
#SSLProxyCipherSuite ALL:!DH:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP 
#SSLCipherSuite ALL:!DH:!ADH:HIGH:+MEDIUM
#SSLProxyCipherSuite ALL:!DH:!ADH:+HIGH:+MEDIUM 
SSLHonorCipherOrder     on
SSLCompression          off
SSLSessionTickets       off

SSLSessionCache        "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300
CustomLog "/usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

<VirtualHost *:80>
    ServerAdmin support@recipeorganizer.net
    DocumentRoot "/usr/local/tomcat/webapps/recipeorganizer"
	ServerName recipeorganizer.net
	ServerAlias *.recipeorganizer.net
	Redirect permanent "/" "https://www.recipeorganizer.net/"
</VirtualHost>

<VirtualHost *:443>
    ServerName recipeorganizer.net
    ServerAlias *.recipeorganizer.net
	ProxyRequests Off
	Alias "/.well-known/acme-challenge" "/usr/local/apache2/letsencrypt"
	<Directory "/usr/local/apache2/letsencrypt">
		AllowOverride None
		Require all granted
		Satisfy Any
		ForceType "text/plain"
		AddDefaultCharset Off
	</Directory>
	ProxyPass 			/.well-known/acme-challenge/ !
	ProxyPass       	/  http://recipeorganizer.net:8080/ retry=1 acquire=3000 timeout=600 KeepAlive=On
	ProxyPassReverse	/  http://recipeorganizer.net:8080/
	ProxyPassReverseCookiePath / / 
	SSLEngine					On 
	SSLCertificateFile 		/usr/local/apache2/ssl/prod/recipeorganizer.crt
	SSLCertificateKeyFile 	/usr/local/apache2/ssl/prod/recipeorganizer.key
	SSLCertificateChainFile	/usr/local/apache2/ssl/prod/recipeorganizerchain.crt
	Header always set Strict-Transport-Security "max-age=15768000"
	<Proxy *>
		Order deny,allow
		Allow from all
	</Proxy>
	<Location "/">
		Order allow,deny
		Allow from all
	</Location>
</VirtualHost>

#SSLCertificateFile 		/usr/local/apache2/ssl/recipeorganizer.net.crt
#SSLCertificateKeyFile 	/usr/local/apache2/ssl/recipeorganizer.net.key  
