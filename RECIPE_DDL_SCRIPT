CREATE TABLE "CATEGORY" ( "ID" NUMBER NOT NULL ENABLE, "NAME" VARCHAR2(30) NOT NULL ENABLE, "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "CATEGORY_UK" UNIQUE ("NAME") ENABLE ) / 
CREATE TABLE "EXCEPTION_LOG" ( "ID" NUMBER, "EVENT_ID" NUMBER, "EVENT_TIMESTAMP" TIMESTAMP (6), "USER_NAME" VARCHAR2(100), "MESSAGE" VARCHAR2(4000), "CLASSNAME" VARCHAR2(500), "METHOD" VARCHAR2(500), "LINENUM" VARCHAR2(100), CONSTRAINT "EXCEPTIONS_PK" PRIMARY KEY ("ID") ENABLE ) / 
CREATE TABLE "USERS" ( "ID" NUMBER, "FIRSTNAME" VARCHAR2(50) NOT NULL ENABLE, "LASTNAME" VARCHAR2(50), "EMAIL" VARCHAR2(50) NOT NULL ENABLE, "PASSWORD" VARCHAR2(80) NOT NULL ENABLE, "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), "ENABLED" NUMBER(1,0) NOT NULL ENABLE, "TOKEN_EXPIRED" NUMBER NOT NULL ENABLE, "LOCKED" NUMBER(1,0) NOT NULL ENABLE, "ACCOUNT_EXPIRED" NUMBER(1,0) NOT NULL ENABLE, "LAST_LOGIN" TIMESTAMP (6), "PASSWORD_EXPIRED" NUMBER NOT NULL ENABLE, CONSTRAINT "USERS_PK" PRIMARY KEY ("ID") ENABLE ) / 
CREATE TABLE "RECIPE" ( "ID" NUMBER(11,0), "USER_ID" NUMBER(11,0) NOT NULL ENABLE, "NAME" VARCHAR2(250) NOT NULL ENABLE, "BACKGROUND" CLOB, "DESCRIPTION" CLOB, "CATEGORY_ID" NUMBER(11,0), "SERVINGS" VARCHAR2(100), "NOTES" CLOB, "ALLOW_SHARE" NUMBER(1,0), "PHOTO" VARCHAR2(250), "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), "TAGS" "TAGLIST" , "PREP_HOURS" NUMBER, "PREP_MINUTES" NUMBER, "VIEWS" NUMBER, "APPROVED" NUMBER(1,0) NOT NULL ENABLE, "COPYRIGHTED" NUMBER(1,0), CONSTRAINT "RECIPE_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "RECIPE_FK2" FOREIGN KEY ("CATEGORY_ID") REFERENCES "CATEGORY" ("ID") ENABLE, CONSTRAINT "RECIPE_FK3" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "FAVORITES" ( "USER_ID" NUMBER(11,0), "RECIPE_ID" NUMBER(11,0), "DATE_ADDED" TIMESTAMP (6), CONSTRAINT "FAVORITES_FK1" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "FAVORITES_FK2" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "INGREDIENT" ( "ID" NUMBER, "NAME" VARCHAR2(250) NOT NULL ENABLE, "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), CONSTRAINT "INGREDIENT_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "INGREDIENT_UK" UNIQUE ("NAME") ENABLE ) / 
CREATE TABLE "INGREDIENT_SECTION" ( "ID" NUMBER NOT NULL ENABLE, "RECIPE_ID" NUMBER NOT NULL ENABLE, "SEQUENCE_NO" NUMBER(2,0) NOT NULL ENABLE, "NAME" VARCHAR2(50), CONSTRAINT "INGREDIENT_SECTION_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "INGREDIENT_SECTION_UK" UNIQUE ("ID", "RECIPE_ID", "SEQUENCE_NO") ENABLE, CONSTRAINT "INGREDIENT_SECTION_FK" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "INSTRUCTION_SECTION" ( "ID" NUMBER NOT NULL ENABLE, "RECIPE_ID" NUMBER NOT NULL ENABLE, "SEQUENCE_NO" NUMBER(2,0) NOT NULL ENABLE, "NAME" VARCHAR2(50), CONSTRAINT "INSTRUCTION_SECTION_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "INSTRUCTION_SECTION_UK" UNIQUE ("ID", "RECIPE_ID", "SEQUENCE_NO") ENABLE, CONSTRAINT "INSTRUCTION_SECTION_FK" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "INSTRUCTIONS" ( "ID" NUMBER NOT NULL ENABLE, "SECTION_ID" NUMBER NOT NULL ENABLE, "SEQUENCE_NO" NUMBER NOT NULL ENABLE, "DESCRIPTION" VARCHAR2(2000), "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), CONSTRAINT "INSTRUCTIONS_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "INSTRUCTIONS_FK" FOREIGN KEY ("SECTION_ID") REFERENCES "INSTRUCTION_SECTION" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "PASSWORDRESETTOKEN" ( "ID" NUMBER NOT NULL ENABLE, "EXPIRY_DATE" TIMESTAMP (6), "TOKEN" VARCHAR2(255), "USER_ID" NUMBER NOT NULL ENABLE, CONSTRAINT "PASSWORDRESETTOKEN_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "PASSWORDRESETTOKEN_FK" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "PERSISTENT_LOGINS" ( "USERNAME" VARCHAR2(100) NOT NULL ENABLE, "SERIES" VARCHAR2(64) NOT NULL ENABLE, "TOKEN" VARCHAR2(64) NOT NULL ENABLE, "LAST_USED" TIMESTAMP (6) NOT NULL ENABLE, CONSTRAINT "PERSISTENT_LOGINS_PK" PRIMARY KEY ("SERIES") ENABLE ) / 
CREATE TABLE "PRIVILEGE" ( "ID" NUMBER, "NAME" VARCHAR2(10) NOT NULL ENABLE, "DEFAULT_PRIVILEGE" NUMBER(1,0), CONSTRAINT "PRIVILEGE_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "PRIVILEGE_CON" UNIQUE ("NAME") ENABLE ) / 
CREATE TABLE "RECIPE_COMMENTS" ( "ID" NUMBER, "RECIPE_ID" NUMBER, "USER_ID" NUMBER, "USER_COMMENT" VARCHAR2(500), "DATE_ADDED" TIMESTAMP (6), "FLAG" NUMBER(1,0), CONSTRAINT "RECIPE_COMMENTS_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "RECIPE_COMMENTS_FK1" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "RECIPE_COMMENTS_FK2" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ENABLE ) / 
CREATE TABLE "RECIPE_INGREDIENTS" ( "ID" NUMBER, "SECTION_ID" NUMBER NOT NULL ENABLE, "INGREDIENT_ID" NUMBER NOT NULL ENABLE, "QUANTITY" VARCHAR2(20), "QTY_AMT" BINARY_FLOAT, "QTY_TYPE" VARCHAR2(50), "QUALIFIER" VARCHAR2(250), "SEQUENCE_NO" NUMBER, "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), CONSTRAINT "RECIPE_INGREDIENTS_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "RECIPE_INGREDIENTS_FK2" FOREIGN KEY ("INGREDIENT_ID") REFERENCES "INGREDIENT" ("ID") ENABLE, CONSTRAINT "RECIPE_INGREDIENTS_FK1" FOREIGN KEY ("SECTION_ID") REFERENCES "INGREDIENT_SECTION" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "RECIPE_MADE" ( "USER_ID" NUMBER, "RECIPE_ID" NUMBER, "LAST_MADE" TIMESTAMP (6), "MADE_COUNT" NUMBER, CONSTRAINT "RECIPE_MADE_FK1" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "RECIPE_MADE_FK2" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "RECIPE_NOTES" ( "USER_ID" NUMBER(11,0), "RECIPE_ID" NUMBER(11,0), "NOTE" CLOB, CONSTRAINT "RECIPE_NOTES_FK1" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "RECIPE_NOTES_FK2" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "ROLE" ( "ID" NUMBER, "NAME" VARCHAR2(10) NOT NULL ENABLE, "DESCRIPTION" VARCHAR2(20), CONSTRAINT "ROLE_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "ROLE_CON" UNIQUE ("NAME") ENABLE ) / 
CREATE TABLE "ROLES_PRIVILEGES" ( "ROLE_ID" NUMBER NOT NULL ENABLE, "PRIVILEGE_ID" NUMBER NOT NULL ENABLE, CONSTRAINT "ROLES_PRIVILEGES_FK1" FOREIGN KEY ("ROLE_ID") REFERENCES "ROLE" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "ROLES_PRIVILEGES_FK2" FOREIGN KEY ("PRIVILEGE_ID") REFERENCES "PRIVILEGE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "SOURCE" ( "TYPE" VARCHAR2(30) NOT NULL ENABLE, "COOKBOOK" VARCHAR2(250), "COOKBOOK_PAGE" NUMBER, "ID" NUMBER NOT NULL ENABLE, "MAGAZINE" VARCHAR2(250), "MAGAZINE_PUBDATE" DATE, "NEWSPAPER" VARCHAR2(250), "NEWSPAPER_PUBDATE" DATE, "PERSON" VARCHAR2(250), "WEBSITE_URL" VARCHAR2(250), "RECIPE_URL" VARCHAR2(500), "OTHER" VARCHAR2(500), "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), "RECIPE_ID" NUMBER NOT NULL ENABLE, CONSTRAINT "SOURCE_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "SOURCE_FK" FOREIGN KEY ("RECIPE_ID") REFERENCES "RECIPE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "USER_PROFILE" ( "ID" NUMBER(11,0), "USER_ID" NUMBER NOT NULL ENABLE, "CITY" VARCHAR2(75), "STATE" VARCHAR2(30), "AGE" NUMBER(1,0), "INTERESTS" VARCHAR2(500), "DATE_ADDED" TIMESTAMP (6), "DATE_UPDATED" TIMESTAMP (6), "AVATAR" VARCHAR2(100), CONSTRAINT "USER_PROFILE_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "USER_PROFILE_FK" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "USER_ROLES" ( "USER_ID" NUMBER NOT NULL ENABLE, "ROLE_ID" NUMBER NOT NULL ENABLE, CONSTRAINT "USERS_ROLES_FK1" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE, CONSTRAINT "USERS_ROLES_FK2" FOREIGN KEY ("ROLE_ID") REFERENCES "ROLE" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE TABLE "VERIFICATIONTOKEN" ( "ID" NUMBER NOT NULL ENABLE, "EXPIRY_DATE" TIMESTAMP (6), "TOKEN" VARCHAR2(255), "USER_ID" NUMBER NOT NULL ENABLE, CONSTRAINT "VERIFICATIONTOKEN_PK" PRIMARY KEY ("ID") ENABLE, CONSTRAINT "VERIFICATIONTOKEN_FK" FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID") ON DELETE CASCADE ENABLE ) / 
CREATE UNIQUE INDEX "CATEGORY_IDX1" ON "CATEGORY" ("NAME") / 
CREATE UNIQUE INDEX "CATEGORY_PK" ON "CATEGORY" ("ID") / 
CREATE UNIQUE INDEX "EXCEPTIONS_PK" ON "EXCEPTION_LOG" ("ID") / 
CREATE UNIQUE INDEX "FAVORITES_IDX1" ON "FAVORITES" ("USER_ID", "RECIPE_ID") / 
CREATE UNIQUE INDEX "INGREDIENT_IDX1" ON "INGREDIENT" ("NAME") / 
CREATE UNIQUE INDEX "INGREDIENT_PK" ON "INGREDIENT" ("ID") / 
CREATE UNIQUE INDEX "INGREDIENT_SECTION_PK" ON "INGREDIENT_SECTION" ("ID") / 
CREATE UNIQUE INDEX "INGREDIENT_SECTION_UK" ON "INGREDIENT_SECTION" ("ID", "RECIPE_ID", "SEQUENCE_NO") / 
CREATE UNIQUE INDEX "INSTRUCTIONS_PK" ON "INSTRUCTIONS" ("ID") / 
CREATE UNIQUE INDEX "INSTRUCTION_SECTION_PK" ON "INSTRUCTION_SECTION" ("ID") / 
CREATE UNIQUE INDEX "INSTRUCTION_SECTION_UK" ON "INSTRUCTION_SECTION" ("ID", "RECIPE_ID", "SEQUENCE_NO") / 
CREATE UNIQUE INDEX "PASSWORDRESETTOKEN_PK" ON "PASSWORDRESETTOKEN" ("ID") / 
CREATE UNIQUE INDEX "PERSISTENT_LOGINS_PK" ON "PERSISTENT_LOGINS" ("SERIES") / 
CREATE UNIQUE INDEX "PRIVILEGE_CON" ON "PRIVILEGE" ("NAME") / 
CREATE UNIQUE INDEX "PRIVILEGE_PK" ON "PRIVILEGE" ("ID") / 
CREATE UNIQUE INDEX "RECIPE_COMMENTS_PK" ON "RECIPE_COMMENTS" ("ID") / 
CREATE UNIQUE INDEX "RECIPE_IDX1" ON "RECIPE" ("USER_ID", "NAME") / 
CREATE UNIQUE INDEX "RECIPE_INGREDIENTS_PK" ON "RECIPE_INGREDIENTS" ("ID") / 
CREATE UNIQUE INDEX "RECIPE_MADE_IDX1" ON "RECIPE_MADE" ("USER_ID", "RECIPE_ID") / 
CREATE UNIQUE INDEX "RECIPE_NOTES_IDX1" ON "RECIPE_NOTES" ("USER_ID", "RECIPE_ID") / 
CREATE UNIQUE INDEX "RECIPE_PK" ON "RECIPE" ("ID") / 
CREATE UNIQUE INDEX "ROLE_CON" ON "ROLE" ("NAME") / 
CREATE UNIQUE INDEX "ROLE_PK" ON "ROLE" ("ID") / 
CREATE UNIQUE INDEX "SOURCE_PK" ON "SOURCE" ("ID") / 
CREATE UNIQUE INDEX "SYS_IL0000018019C00004$$" ON "RECIPE" ( / CREATE UNIQUE INDEX "SYS_IL0000018019C00005$$" ON "RECIPE" ( / CREATE UNIQUE INDEX "SYS_IL0000018019C00008$$" ON "RECIPE" ( / CREATE UNIQUE INDEX "SYS_IL0000031178C00003$$" ON "RECIPE_NOTES" ( / 
CREATE UNIQUE INDEX "USERS_IDX1" ON "USERS" ("EMAIL") / 
CREATE UNIQUE INDEX "USERS_PK" ON "USERS" ("ID") / 
CREATE UNIQUE INDEX "USER_PROFILE_IDX1" ON "USER_PROFILE" ("USER_ID") / 
CREATE UNIQUE INDEX "USER_PROFILE_PK" ON "USER_PROFILE" ("ID") / 
CREATE UNIQUE INDEX "VERIFICATIONTOKEN_PK" ON "VERIFICATIONTOKEN" ("ID") / 
CREATE SEQUENCE "CATEGORY_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 281 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "EXCEPTION_EVENTID_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 999 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "EXCEPTION_LOG_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1770 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "INGREDIENT_SECTION_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 421 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "INGREDIENT_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 761 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "INSTRUCTIONS_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1561 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "INSTRUCTION_SECTION_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 441 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "MEASURE_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "PASSWORDRESETTOKEN_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "PRIVILEGE_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "RECIPE_COMMENTS_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "RECIPE_INGREDIENTS_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1561 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "RECIPE_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1501 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "ROLE_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "SOURCE_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1362 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "USERS_SEQ" MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 107 CACHE 2 NOORDER NOCYCLE / 
CREATE SEQUENCE "USER_PROFILE_SEQ" MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 25 CACHE 2 NOORDER NOCYCLE / 
CREATE SEQUENCE "USER_ROLES_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "VERIFICATIONTOKEN_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER NOCYCLE / 
CREATE SEQUENCE "VERIFICATION_TOKEN_SEQ" MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE / 
CREATE OR REPLACE TRIGGER "BI_CATEGORY" BEFORE insert on "CATEGORY" for each row WHEN (new.id is null) begin select "CATEGORY_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_CATEGORY" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_EXCEPTION_LOG" before insert on "EXCEPTION_LOG" for each row WHEN (new.ID is null) begin select "EXCEPTION_LOG_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_EXCEPTION_LOG" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_INGREDIENT" BEFORE insert on "INGREDIENT" for each row WHEN (new.id is null) begin select "INGREDIENT_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_INGREDIENT" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_INGREDIENT_SECTION" before insert on "INGREDIENT_SECTION" for each row WHEN (new.id is null) begin select "INGREDIENT_SECTION_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_INGREDIENT_SECTION" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_INSTRUCTIONS" BEFORE insert on "INSTRUCTIONS" for each row WHEN (new.id is null) begin select "INSTRUCTIONS_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_INSTRUCTIONS" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_INSTRUCTION_SECTION" before insert on "INSTRUCTION_SECTION" for each row WHEN (new.id is null) begin select "INSTRUCTION_SECTION_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_INSTRUCTION_SECTION" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_PASSWORDRESETTOKEN" before insert on "PASSWORDRESETTOKEN" for each row WHEN (new.id is null) begin select "PASSWORDRESETTOKEN_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_PASSWORDRESETTOKEN" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_PRIVILEGE" before insert on "PRIVILEGE" for each row WHEN (new.id is null) begin select "PRIVILEGE_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_PRIVILEGE" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_RECIPE" BEFORE insert on "RECIPE" for each row WHEN (new.id is null) begin select "RECIPE_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_RECIPE" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_RECIPE_COMMENTS" BEFORE insert on "RECIPE_COMMENTS" for each row WHEN (new.id is null) begin select "RECIPE_COMMENTS_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_RECIPE_COMMENTS" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_RECIPE_INGREDIENTS" BEFORE insert on "RECIPE_INGREDIENTS" for each row WHEN (new.id is null) begin select "RECIPE_INGREDIENTS_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_RECIPE_INGREDIENTS" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_ROLE" before insert on "ROLE" for each row WHEN (new.id is null) begin select "ROLE_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_ROLE" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_SOURCE" BEFORE insert on "SOURCE" for each row WHEN (new.id is null) begin select "SOURCE_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_SOURCE" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_USERS" BEFORE insert on "USERS" for each row WHEN (new.id is null) begin select "USERS_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_USERS" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_USER_PROFILE" BEFORE insert on "USER_PROFILE" for each row WHEN (new.id is null) begin select "USER_PROFILE_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_USER_PROFILE" ENABLE / 
CREATE OR REPLACE TRIGGER "BI_VERIFICATIONTOKEN" before insert on "VERIFICATIONTOKEN" for each row WHEN (new.id is null) begin select "VERIFICATIONTOKEN_SEQ".nextval into :NEW.ID from dual; end; / ALTER TRIGGER "BI_VERIFICATIONTOKEN" ENABLE / 
CREATE OR REPLACE TRIGGER "CATEGORY_T1" BEFORE INSERT ON CATEGORY FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "CATEGORY_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "CATEGORY_T2" BEFORE UPDATE ON CATEGORY FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "CATEGORY_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "FAVORITES_T1" BEFORE INSERT ON FAVORITES FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "FAVORITES_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "INGREDIENT_T1" BEFORE INSERT ON INGREDIENT FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "INGREDIENT_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "INGREDIENT_T2" BEFORE UPDATE ON INGREDIENT FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "INGREDIENT_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "INSTRUCTIONS_T1" BEFORE INSERT ON INSTRUCTIONS FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "INSTRUCTIONS_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "INSTRUCTIONS_T2" BEFORE UPDATE ON INSTRUCTIONS FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "INSTRUCTIONS_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "RECIPE_COMMENTS_T1" BEFORE INSERT ON RECIPE_COMMENTS FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "RECIPE_COMMENTS_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "RECIPE_INGREDIENTS_T1" BEFORE INSERT ON RECIPE_INGREDIENTS FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "RECIPE_INGREDIENTS_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "RECIPE_INGREDIENTS_T2" BEFORE UPDATE ON RECIPE_INGREDIENTS FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "RECIPE_INGREDIENTS_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "RECIPE_T1" BEFORE INSERT ON RECIPE FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "RECIPE_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "RECIPE_T2" BEFORE UPDATE ON RECIPE FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "RECIPE_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "SOURCE_T1" BEFORE INSERT ON SOURCE FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "SOURCE_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "SOURCE_T2" BEFORE UPDATE ON SOURCE FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "SOURCE_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "USERS_T1" BEFORE INSERT ON USERS FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "USERS_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "USERS_T2" BEFORE UPDATE ON USERS FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "USERS_T2" ENABLE / 
CREATE OR REPLACE TRIGGER "USER_PROFILE_T1" BEFORE INSERT ON USER_PROFILE FOR EACH ROW WHEN (new.date_added is null) BEGIN :NEW.DATE_ADDED := SYSDATE; END; / ALTER TRIGGER "USER_PROFILE_T1" ENABLE / 
CREATE OR REPLACE TRIGGER "USER_PROFILE_T2" BEFORE UPDATE ON USER_PROFILE FOR EACH ROW BEGIN :NEW.DATE_UPDATED := SYSDATE; END; / ALTER TRIGGER "USER_PROFILE_T2" ENABLE / 